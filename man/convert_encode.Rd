% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleanvector.R
\name{convert_encode}
\alias{convert_encode}
\title{Convert the encoding of all elements in a character vector to the specified encoding.}
\usage{
convert_encode(vector, required_encode, from_encode = "", ignore_na = TRUE)
}
\arguments{
\item{vector}{A character vector to check and convert.}

\item{required_encode}{character. A string specifying the required encoding (e.g., "UTF-8", "latin1").}

\item{from_encode}{character. A string specifying the encoding to convert from. Default is \code{""} or no pattern.}

\item{ignore_na}{logical. Whether to throw an error if NA values are present or not. Default is \code{TRUE}.}
}
\value{
A character vector with the required encoding if conversion is successful; otherwise, prints an error and returns \code{NULL}.
}
\description{
Checks if all elements of the input character vector have the specified encoding.
If not, try to convert all elements to the required encoding using \code{iconv}.
Throws an error if the conversion is unsuccessful.
}
\examples{
# All elements are already UTF-8 encoded
convert_encode(c("a", "b", "c"), "UTF-8")

# Convert to latin1 encoding
x <- c("a", "\u20ac") # Euro sign may not convert into latin1
convert_encode(x, "latin1")

# Convert from latin1 to UTF-8
x <- iconv(c("café", "über"), to = "latin1")
convert_encode(x, required_encode = "UTF-8", from_encode = "latin1")

# Convert from latin1 to UTF-8 with an NA will throw an error if NA's are not ignored.
\dontrun{
  x <- iconv(c("café", "über", NA), to = "latin1")
  convert_encode(x, required_encode = "UTF-8", from_encode = "latin1", ignore_na = FALSE)
}

}
