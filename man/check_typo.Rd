% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleanvector.R
\name{check_typo}
\alias{check_typo}
\title{Check for and correct typos in a vector.}
\usage{
check_typo(
  vector,
  distance_method = "cosine",
  clustering_method = "complete",
  cut_height = 0.5,
  max_distance = 0.5,
  correct = TRUE,
  correct_method = "replace",
  ...
)
}
\arguments{
\item{vector}{A character vector to check for typos.}

\item{distance_method}{character. A string specifying the distance method to use. Default is "cosine".}

\item{clustering_method}{character. A string specifying the clustering method to use. Default is "complete".}

\item{cut_height}{numeric. A value specifying the height at which to cut the dendrogram. Default is 0.5.}

\item{max_distance}{numeric. A value specifying the maximum distance between elements to be considered similar. Default is 0.5.}

\item{correct}{logical. A value specifying whether to correct typos. Default is TRUE.}

\item{correct_method}{character. A string specifying the method to use for correction. Default is "replace".
The different methods are "replace", "remove", "error", and "keep".}

\item{...}{Additional arguments passed to stringdist::stringdistmatrix.}
}
\value{
A character vector with typos corrected if chosen.
}
\description{
Identifies typos in a vector by clustering similar elements together.
Typos can be kept, removed, replaced with the most common occurrence, or cause for an error to be thrown.
Any NA or whitespace elements in character vectors are ignored.
}
\examples{
# Example: Default operation is to replace each typo with its most common occurrence
check_typo(c("apple", "aple", "appel", "aple","apple","apple","ap ple","Back","Back","b_eck"))

# Example: Remove typos while keeping the "correct" spelling,
# which is the most common occurrence
check_typo(c("cow", "cowa", "cowch", "cow", "moose", "meese", "meese"), correct_method = "remove")

# Example: Replaces typos with the most common occurrence, which is not "apple" in this case
# and automatically ignores NA and empty or whitespace strings
check_typo(c("apple", "ap pl", NA, "apple", "ap pl", "ap pl", " ", "aple"))
}
